= Iba

by Matijs van Zuijlen

== Description

Introspective Block Assertions

== Features

* Write assertions as a (one-expression) block
* Assertion message deconstructs the block's expression.

== Synopsis

  # In your test helper:
  require 'iba'
  class Test::Unit::TestCase
    include Iba::BlockAssertion
  end

  # In your test:
  foo = 24
  assert { foo == 23 } # => "(foo == 23) is false
                       #     foo is 24."

== Details

Iba provides an assert method that takes a block. If the block returns
false, it will try to construct an insightful error message based on the
contents of the block.

Iba's functionality is inspired by Wrong[1], but doesn't use an external
Ruby parser. This means it will work in contexts where Wrong does not
(generated code, on the command line). It also means there are more limits
to the contents of the block.

Current limits:

* Only single-expression blocks are supported.
* The expression must start with a method-like identifier (like 'foo', but
  not 'Foo' or '23'). In practice, this produces quite natural results.

Iba's implementation is inspired by Arlo[2], a generic combinator library
for Python.

== Install

  gem install iba

== Links

[1] https://github.com/sconover/wrong
[2] http://withoutane.com/rants/2008/12/arlo-generic-combinators-for-python

== Licence

See the LICENSE file.
